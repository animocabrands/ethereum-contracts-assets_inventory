{
  "name": "@animoca/ethereum-contracts-assets_inventory",
  "version": "7.0.0",
  "description": "Solidity assets contracts managing fungible and non-fungible tokens",
  "repository": {
    "type": "git",
    "url": "git@github.com:animocabrands/ethereum-contracts-assets_inventory.git"
  },
  "author": "Animoca Brands",
  "license": "ISC",
  "keywords": [
    "solidity",
    "ethereum",
    "smart",
    "contracts",
    "assets",
    "inventory"
  ],
  "devDependencies": {
    "@animoca/blockchain-inventory_metadata": "^0.0.1",
    "@animoca/ethereum-contracts-core_library": "=3.1.1",
    "@nomiclabs/hardhat-truffle5": "^2.0.0",
    "@nomiclabs/hardhat-web3": "^2.0.0",
    "@openzeppelin/test-helpers": "git+https://github.com/nataouze/openzeppelin-test-helpers.git#fix_bn_array_event_args",
    "@smartdec/smartcheck": "^2.0.1",
    "bits.js": "^0.1.1",
    "chai": "^4.2.0",
    "cross-env": "^7.0.3",
    "eslint": "^7.18.0",
    "eslint-config-mocha": "^0.0.0",
    "eslint-config-prettier": "^7.2.0",
    "eslint-plugin-mocha": "^8.0.0",
    "eslint-plugin-prettier": "^3.3.1",
    "fs-extra": "^9.1.0",
    "ganache-cli": "^6.12.2",
    "glob": "^7.1.6",
    "hardhat": "^2.0.8",
    "hardhat-gas-reporter": "^1.0.4",
    "mocha": "^8.2.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.2.1",
    "prettier-plugin-solidity": "^1.0.0-beta.3",
    "solc-0.6.8": "npm:solc@0.6.8",
    "solc-0.7.4": "npm:solc@0.7.4",
    "solhint": "^3.3.2",
    "solhint-plugin-prettier": "^0.0.5",
    "solidity-coverage": "^0.7.14",
    "solidity-docgen": "^0.5.11",
    "wait-on": "^5.2.1",
    "web3": "^1.3.1"
  },
  "scripts": {
    "postinstall": "node ./.setup.js",
    "lint:js": "eslint \"**/*.{js,ts}\"",
    "lint:sol": "solhint contracts/**/*.sol",
    "lint": "run-s lint:js lint:sol",
    "fix:js": "eslint --fix \"**/*.{js,ts}\"",
    "fix:sol": "eslint --fix \"**/*.{js,ts}\" && solhint --fix contracts/**/*.sol",
    "fix": "run-s fix:js fix:sol",
    "format:js": "prettier --write \"**/*.{ts,js}\"",
    "format:sol": "prettier --write \"**/*.sol\"",
    "format": "run-s format:js format:sol",
    "compile": "hardhat compile --show-stack-traces",
    "flatten": "hardhat flatten-all --show-stack-traces",
    "smartcheck": "smartcheck -p contracts &> smartcheck.log",
    "test": "hardhat test --show-stack-traces",
    "coverage:ERC1155Inventory": "hardhat coverage --show-stack-traces --testfiles test/contracts/token/ERC1155/ERC1155InventoryMock.test.js && rm -rf coverage_ERC1155InventoryMock && mv coverage coverage_ERC1155InventoryMock",
    "coverage:ERC1155BurnableInventory": "hardhat coverage --show-stack-traces --testfiles test/contracts/token/ERC1155/ERC1155BurnableInventoryMock.test.js && rm -rf coverage_ERC1155BurnableInventoryMock && mv coverage coverage_ERC1155BurnableInventoryMock",
    "coverage:ERC1155721Inventory": "hardhat coverage --show-stack-traces --testfiles test/contracts/token/ERC1155721/ERC1155721InventoryMock.test.js && rm -rf coverage_ERC1155721InventoryMock && mv coverage coverage_ERC1155721InventoryMock",
    "coverage:ERC1155721BurnableInventory": "hardhat coverage --show-stack-traces --testfiles test/contracts/token/ERC1155721/ERC1155721BurnableInventoryMock.test.js && rm -rf coverage_ERC1155721BurnableInventoryMock && mv coverage coverage_ERC1155721BurnableInventoryMock",
    "coverage": "run-s coverage:ERC1155Inventory coverage:ERC1155BurnableInventory coverage:ERC1155721Inventory coverage:ERC1155721BurnableInventory",
    "ganache": "ganache-cli -g 1000000000",
    "gas-report": "wait-on tcp:8545 && cross-env REPORT_GAS=true hardhat --network localhost test --show-stack-traces",
    "doc:slate:setup_tofix": "node documentation/setup-slate.js",
    "doc:slate:generate_tofix": "node documentation/generate-slate.js",
    "doc:sol": "hardhat docgen --show-stack-traces",
    "doc": "run-s doc:sol",
    "clean:vscode": "rm -rf .vscode/extensions.json .vscode/launch.json .vscode/settings.json",
    "clean:compile": "rm -rf artifacts cache",
    "clean:flatten": "rm -rf contracts_flattened",
    "clean:smartcheck": "rm -rf smartcheck*",
    "clean:coverage": "rm -rf coverage* .coverage*",
    "clean:doc": "rm -rf docs",
    "clean": "run-p clean:compile clean:flatten clean:smartcheck clean:coverage clean:doc",
    "make:coffee": "run-s format fix compile flatten smartcheck test coverage doc",
    "make:tiramisu": "run-s clean make:coffee gas-report"
  }
}
